#############################################################################
# Makefile for building: ChatClient
# Generated by qmake (3.0) (Qt 5.5.1)
# Project:  ChatClient.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt5/bin/qmake -spec linux-g++-64 CONFIG+=debug CONFIG+=qml_debug -o Makefile ChatClient.pro
#############################################################################

MAKEFILE      = Makefile

####### Compiler, tools and options

CC            = gcc
CXX           = g++
CFLAGS        = -m64 -pipe -g -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -std=c++0x -Wall -W -fPIC $(DEFINES)
DEL_FILE      = rm -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
COPY          = cp -f
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
INSTALL_FILE  = install -m 644 -p
INSTALL_PROGRAM = install -m 755 -p
INSTALL_DIR   = cp -f -R
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
TAR           = tar -cf
COMPRESS      = gzip -9f
DISTNAME      = ChatClient1.0.0
DISTDIR = /home/cyrildz/Project/ChatClient/.tmp/ChatClient1.0.0
LINK          = g++
LFLAGS        = -m64
LIBS          = $(SUBLIBS) -pthread 
AR            = ar cqs
RANLIB        = 
SED           = sed
STRIP         = strip

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		logger.cpp \
		protocol.cpp \
		client.cpp 
OBJECTS       = main.o \
		logger.o \
		protocol.o \
		client.o
DIST          = common.h \
		logger.h \
		protocol.h \
		serialization.h \
		client.h \
		queue.h \
		inputargreader.h main.cpp \
		logger.cpp \
		protocol.cpp \
		client.cpp
QMAKE_TARGET  = ChatClient
DESTDIR       = #avoid trailing-slash linebreak
TARGET        = ChatClient


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS)  -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS)  -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS)  -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS)  -o "$@" "$<"

####### Build rules

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)




####### Sub-libraries

check: first

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile
all: ${TARGET}

main.o: main.cpp client.h \
		common.h \
		logger.h \
		serialization.h \
		protocol.h \
		queue.h
	$(CXX) -c $(CXXFLAGS)  -o main.o main.cpp

logger.o: logger.cpp logger.h
	$(CXX) -c $(CXXFLAGS) -o logger.o logger.cpp

protocol.o: protocol.cpp protocol.h
	$(CXX) -c $(CXXFLAGS)  -o protocol.o protocol.cpp

client.o: client.cpp client.h \
		common.h \
		logger.h \
		serialization.h \
		protocol.h \
		queue.h
	$(CXX) -c $(CXXFLAGS) -o client.o client.cpp

####### Install

install:  FORCE

uninstall:  FORCE

FORCE:

